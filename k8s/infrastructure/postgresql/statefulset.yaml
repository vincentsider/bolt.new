apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: workflowhub
  labels:
    app: postgresql
spec:
  ports:
  - port: 5432
    name: postgresql
  clusterIP: None
  selector:
    app: postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-read
  namespace: workflowhub
  labels:
    app: postgresql
spec:
  ports:
  - port: 5432
    name: postgresql
  selector:
    app: postgresql
    role: replica
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: workflowhub
spec:
  serviceName: postgresql
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
      - name: init-postgres
        image: postgres:15-alpine
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          if [[ $ordinal -eq 0 ]]; then
            echo "role=master" > /etc/postgresql/role
          else
            echo "role=replica" > /etc/postgresql/role
          fi
        volumeMounts:
        - name: role
          mountPath: /etc/postgresql
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: POSTGRES_DB
          value: workflowhub
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: role
          mountPath: /etc/postgresql
        - name: config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: role
        emptyDir: {}
      - name: config
        configMap:
          name: postgresql-config
      - name: init-scripts
        configMap:
          name: postgresql-init
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi